generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(uuid())
  fullName           String
  email              String     @unique
  phone              String
  password           String
  address            String
  businessName       String?
  businessEmail      String?
  businessType       String?
  yearEstablished    String?
  fssaiNumber        String?
  gstNumber          String?
  contactPersonName  String?
  contactDesignation String?
  contactPhone       String?
  contactEmail       String?
  fssaiCertificate   String? // Only for restaurant
  addressProof       String? // Only for restaurant
  safetyAudit        String? // Only for restaurant
  role               Role
  recipes            Recipe[]
  donations          Donation[]
  mealPlans          MealPlan[]
  hasDonated         Boolean    @default(false)
  createdAt          DateTime   @default(now())
}

model ngo {
  id String @id @default(uuid())

  role String @default("NGO")

  // organization details
  ngoName            String
  ngoType            String
  registrationNumber String
  yearEstablished    String
  website            String?

  // authorized person details
  fullName       String
  email          String  @unique
  password       String
  phone          String
  alternatePhone String?
  designation    String

  // address
  streetAddress String
  city          String
  state         String
  pincode       String

  // operational details
  areasServed    String
  operatingHours String
  daysAvailable  String
  canPickup      Boolean

  // documents
  registrationCertificate String
  addressProof            String

  // tnc
  agreeTerms Boolean

  acceptedDonations Donation[]
  createdAt         DateTime   @default(now())
}

model Donation {
  id     String  @id @default(uuid())
  userId String
  ngoId  String?

  foodItems       String
  foodCategory    String
  quantity        String
  expiry          String
  preparationDate String
  preparationTime String
  location        String
  description     String?
  contactPhone    String
  pickupTimes     String
  hasAllergens    Boolean @default(false)
  foodImage       String
  allergyInfo     String?
  status          String  @default("pending")

  createdAt DateTime @default(now())
  ngo       ngo?     @relation(fields: [ngoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Recipe {
  id        String   @id @default(uuid())
  recipe    String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model MealPlan {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  item      String
  status    MealStatus
  expiry    DateTime
  createdAt DateTime   @default(now())
}

enum Role {
  USER
  BUSINESS
  NGO
  ADMIN
}

enum MealStatus {
  GREEN
  YELLOW
  RED
}

enum DonationStatus {
  PENDING
  ACCEPTED
}
